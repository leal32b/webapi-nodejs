{
  "root": true,
  "extends": "standard-with-typescript",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "rules": {
    "@typescript-eslint/adjacent-overload-signatures": "off",
    "@typescript-eslint/await-thenable": "off",
    "@typescript-eslint/consistent-type-definitions": "off",
    "@typescript-eslint/member-ordering": ["error", {
      "default": {
        "memberTypes": [
          "signature", "field", "static-initialization", "constructor",
          "public-static-method", "public-method", "public-get", "public-set",
          "protected-method", "private-method", "protected-get",
          "private-get", "protected-set", "private-set"
        ],
        "order": "alphabetically"
      },
      "typeLiterals": ["signature", "method", "constructor", "field"]
    }],
    "@typescript-eslint/naming-convention": ["error",
      { "selector": ["variable"], "format": ["camelCase", "UPPER_CASE"], "leadingUnderscore": "allow" },
      { "selector": ["classMethod", "typeProperty"], "format": ["camelCase"] },
      { "selector": ["typeAlias"], "format": ["PascalCase"] },
      { "selector": ["typeParameter"], "format": ["PascalCase"], "suffix": ["Type"] }
    ],
    "@typescript-eslint/no-extraneous-class": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "@typescript-eslint/no-misused-promises": "off",
    "@typescript-eslint/prefer-nullish-coalescing": "off",
    "@typescript-eslint/strict-boolean-expressions": "off",
    "complexity": ["error", { "max": 5 }],
    "import/export": "warn",
    "import/named": "warn",
    "import/namespace": "warn",
    "import/no-named-as-default": "off",
    "import/no-unresolved": "off",
    "import/order": ["error", {
      "alphabetize": { "order": "asc", "caseInsensitive": true },
      "groups": ["builtin", "external", "internal", "parent", "sibling", "index"],
      "newlines-between": "always",
      "pathGroups": [{ "pattern": "@/**", "group": "internal" }]
    }],
    "max-lines-per-function": ["error", { "max": 27, "skipBlankLines": true, "skipComments": true }],
    "new-cap": "off",
    "no-multiple-empty-lines": ["error", { "max": 1, "maxBOF": 0 }],
    "no-new": "off",
    "sort-keys": ["error"],
    "sort-vars": ["error"]
  },
  "overrides": [{
    "files": ["test/**"],
    "rules": { "max-lines-per-function": "off" }
  }, {
    "files": ["src/**/*-entity.ts", "src/**/migrations/*.ts"],
    "rules": { "@typescript-eslint/member-ordering": "off" }
  }, {
    "files": ["src/**/*-schema*.ts", "src/**/*-path.ts", "src/**/*-api-specification.ts", "src/**/make-swagger.ts", "src/**/*-test.ts", "src/**/*-default.ts"],      
    "rules": { "sort-keys": "off" }
  }],
  "ignorePatterns": [
    "coverage",
    "data-mongodb",
    "data-postgres",
    "dist",
    "docs",
    "node_modules",
    "vitest*",
    "*.hbs"
  ]
}
